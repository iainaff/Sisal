rtmodel_srcdir = $(top_srcdir)/Runtime/$(model)Model
top_includedir = $(top_builddir)/Include

AM_CPPFLAGS += -I$(rtmodel_srcdir)

pkglib_LIBRARIES = libsisal.a

libsisal_a_SOURCES = p-worker.c p-timer.c p-spawn.c              \
	p-wait.c p-ready.c p-ppp.c p-dsa.c          \
	p-error.c p-signal.c p-globals.c            \
	p-fibre.c p-util.c p-interface.c            \
	p-init.c p-pointer.c p-sdbx.c		    \
	p-tracer.c 				    \
	vectorIO.c READ.c usage.h options.h

nodist_pkginclude_HEADERS = sisalrt.h \
	$(top_includedir)/sisalConfig.h \
	$(top_includedir)/sisalPaths.h \
	$(top_includedir)/sisalInfo.h

pkginclude_HEADERS = arrays.h fibre.h interface.h \
	locks.h process.h sisalfli.inc \
	$(rtmodel_srcdir)/lock-implementation.h \
	$(rtmodel_srcdir)/process-implementation.h \
	$(rtmodel_srcdir)/parallelism.h

dist_man_MANS = s.out.1

#----------------------------------------------------------------------------
# There is no standard way to process standalone object file using Automake.
# So, let's build the srt0.o through fake library and install it using custom
# rules written similarly to those generated by Automake for libraries.
#
# This approach relies upon some properties of the generated Makefile.in, 
# so it is quite risky and non-portable. It would probably be better to use 
# libsrt0 directly instead.
#----------------------------------------------------------------------------

noinst_LIBRARIES = libsrt0.a

libsrt0_a_SOURCES = srt0.c

install-exec-local: $(libsrt0_a_OBJECTS)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(libsrt0_a_OBJECTS)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(pkglibdir)" || exit $$?; }
	@$(POST_INSTALL)

uninstall-local:
	@$(NORMAL_UNINSTALL)
	@list='$(libsrt0_a_OBJECTS)'; test -n "$(pkglibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(pkglibdir)" && rm -f $$files
#----------------------------------------------------------------------------

.PHONY: newoptions
newoptions:
	$(top_srcdir)/Utilities/parseopts < options -usage "man.update" usage.h options.h
	awk '{print} /.\\" Start options/{exit}' < $(srcdir)/s.out.1 > s.out.1.new
	cat man.update >> s.out.1.new
	awk '/.\\" End options/{flag=1} {if (flag) print}' < $(srcdir)/s.out.1 >> s.out.1.new
	mv $(srcdir)/s.out.1 $(srcdir)/s.out.1.bu
	mv s.out.1.new $(srcdir)/s.out.1
